#N canvas 593 25 683 431 10;
#X obj 8 -129 cnv 15 230 185 empty empty empty 20 12 0 14 -258113 -66577
0;
#X msg 52 3 disconnect;
#X obj 18 26 s wiimote-command;
#X msg 37 -67 reportClassic 1;
#X msg 29 -93 setLED 9;
#X obj 209 -108 bng 15 250 50 0 empty empty empty 17 7 0 10 -4034 -1
-1;
#X msg 43 -41 reportAcceleration 1;
#X msg 49 -19 reportNunchuk 1;
#X text 245 -27 Uses the Youngmusic Wiilib PD external. It can be found
here. http://youngmusic.org/wiki/index.php/Wiilib;
#X msg 18 -120 discover;
#X text 245 -102 This patch uses the guitar controller for the wii
and a bluetooth interface.;
#X text 245 -69 On the wiimote press 1 + 2 Click on discover and wait
until the wiimote connects. Click on the green bang. Click on disconnect
to turn off the wiimote.;
#X obj 449 63 cnv 15 225 160 empty empty output 20 12 0 14 -4034 -66577
0;
#X obj 472 166 *~ 0;
#X obj 524 142 / 127;
#X obj 528 114 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 462 199 dac~;
#X obj 471 89 catch~ \$0-audio-out;
#X obj 7 63 cnv 15 435 160 empty empty input 20 12 0 14 -233017 -66577
0;
#N canvas 277 85 200 163 \$0-buttons 0;
#X obj -51 25 inlet;
#X obj -51 57 unpack 0 0;
#X obj 6 85 s \$0-byte2;
#X obj -51 107 s \$0-wiimote-buttons;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X restore 15 196 pd \$0-buttons;
#X obj 15 89 r wiimote-command;
#X obj 15 111 wiimote wiimote-command;
#N canvas 0 0 354 225 \$0-accel 0;
#X obj 11 27 inlet;
#X obj 11 87 wiiAcc raw;
#X obj 11 151 s \$0-accelX;
#X obj 43 132 s \$0-accelY;
#X obj 76 113 s \$0-accelZ;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 1 2 4 0;
#X restore 37 176 pd \$0-accel;
#N canvas 370 288 892 370 \$0-process-guitar 0;
#X obj 116 -191 inlet;
#X msg 18 -9 0;
#X msg 45 -9 1;
#X msg 72 -9 2;
#X msg 99 -9 3;
#X msg 126 -9 4;
#X msg 153 -9 5;
#X msg 180 -9 6;
#X msg 207 -9 7;
#X msg 234 -9 8;
#X msg 261 -9 9;
#X msg 288 -9 10;
#X msg 315 -9 11;
#X msg 342 -9 12;
#X floatatom 184 59 5 0 0 0 - - -;
#X obj 35 -61 sel 16400 16448 16392 16416 16464 16408 16456 16480 16424
16432 16472 16488 16504;
#X msg 18 -9 0;
#X msg 45 -9 1;
#X msg 72 -9 2;
#X msg 99 -9 3;
#X msg 126 -9 4;
#X msg 153 -9 5;
#X msg 180 -9 6;
#X msg 207 -9 7;
#X msg 234 -9 8;
#X msg 261 -9 9;
#X msg 288 -9 10;
#X msg 315 -9 11;
#X msg 342 -9 12;
#X msg 488 -23 4;
#X msg 515 -23 5;
#X msg 542 -23 7;
#X msg 569 -23 8;
#X msg 596 -23 10;
#X msg 623 -23 12;
#X msg 650 -23 14;
#X msg 677 -23 16;
#X msg 704 -23 17;
#X msg 731 -23 19;
#X msg 758 -23 20;
#X msg 785 -23 22;
#X msg 812 -23 24;
#X floatatom 73 -173 5 0 0 0 - - -;
#X msg 461 -23 2;
#X msg 434 -23 0;
#X obj 475 -60 sel 17 65 9 33 81 25 73 97 41 49 89 105 121 113 57;
#X msg 846 -23 -1;
#X floatatom 610 49 5 0 0 0 - - -;
#X msg 376 -9 -1;
#X text 48 -76 Down Stroke;
#X text 484 -77 Up Stroke;
#X text 5 -182 Strum Up 1;
#X text 5 -170 Green 16;
#X text 6 -159 Red 64;
#X text 5 -147 Yellow 8;
#X text 6 -135 Blue 32;
#X text 6 -124 Orange 128;
#X text 5 -194 Strum Down 16384;
#X text 4 -210 input values for buttons;
#X text 122 -76 G R Y B GR GY RY RB YB GB GRY RYB GRYB;
#X text 543 -77 G R Y B GR GY RY RB YB GB GRY RYB GRYB GRB GYB;
#N canvas 13 414 726 301 \$0-synth 1;
#X obj 365 32 inlet;
#X floatatom 393 49 5 0 0 0 - - -;
#X text 403 32 up stroke;
#X obj 548 -12 r \$0-wiimote-buttons;
#X obj 492 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 547 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 605 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 664 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 481 92 1;
#X msg 508 92 0;
#X msg 537 92 1;
#X msg 564 92 0;
#X msg 593 92 1;
#X msg 620 92 0;
#X msg 649 92 1;
#X msg 676 92 0;
#X obj 15 32 inlet;
#X floatatom 43 49 5 0 0 0 - - -;
#X obj 198 -12 r \$0-wiimote-buttons;
#X obj 142 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 197 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 255 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 314 49 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 131 92 1;
#X msg 158 92 0;
#X msg 187 92 1;
#X msg 214 92 0;
#X msg 243 92 1;
#X msg 270 92 0;
#X msg 299 92 1;
#X msg 326 92 0;
#N canvas 519 340 399 359 \$0-synth1 0;
#X obj 55 15 inlet;
#X obj 159 145 mtof;
#X floatatom 159 172 5 0 0 0 - - -;
#X obj 159 277 osc~;
#X obj 160 324 throw~ \$0-audio-out;
#X obj 77 117 + 65;
#X obj 77 143 mtof;
#X floatatom 77 173 5 0 0 0 - - -;
#X obj 77 277 osc~;
#X obj 34 323 throw~ \$0-audio-out;
#X obj 245 148 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-whammy empty 0 -8
0 10 -262144 -1 -1 17 256;
#X obj 159 221 +;
#X obj 204 201 * 10;
#X obj 55 66 sel -1;
#X floatatom 33 249 5 0 0 0 - - -;
#X text 217 129 reads value from whammy bar;
#X text 101 63 value of -1 disables output;
#X floatatom 105 43 5 0 0 0 - - -;
#X text 133 16 lame organ patch;
#X obj 245 179 - 13;
#X obj 159 117 + 58;
#X connect 0 0 13 0;
#X connect 0 0 17 0;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 19 0;
#X connect 11 0 3 0;
#X connect 12 0 11 1;
#X connect 13 0 14 0;
#X connect 13 1 5 0;
#X connect 13 1 20 0;
#X connect 14 0 8 0;
#X connect 14 0 3 0;
#X connect 19 0 12 0;
#X connect 20 0 1 0;
#X restore -11 251 pd \$0-synth1;
#X text 53 32 down stroke;
#X obj 365 168 spigot 1;
#X obj 420 168 spigot 0;
#X obj 475 168 spigot 0;
#X obj 530 168 spigot 0;
#X obj 15 168 spigot 1;
#X obj 70 168 spigot 0;
#X obj 125 168 spigot 0;
#X obj 180 168 spigot 0;
#X floatatom 324 16 5 0 0 0 - - -;
#N canvas 671 186 355 347 \$0-synth2 0;
#X obj 49 21 inlet;
#X obj 117 134 + 60;
#X obj 202 134 + 65;
#X obj 74 167 mtof;
#X obj 117 167 mtof;
#X obj 160 167 mtof;
#X obj 202 167 mtof;
#X obj 74 220 osc~;
#X obj 117 219 osc~;
#X obj 160 219 osc~;
#X obj 202 218 osc~;
#X obj 201 251 throw~ \$0-audio-out;
#X obj 161 272 throw~ \$0-audio-out;
#X obj 118 293 throw~ \$0-audio-out;
#X obj 73 314 throw~ \$0-audio-out;
#X obj 160 134 + 67;
#X obj 74 134 + 72;
#X obj 90 78 sel -1;
#X floatatom 20 184 5 0 0 0 - - -;
#X text 135 79 value of -1 disables output;
#X text 123 30 minor chord patch;
#X floatatom 24 56 5 0 0 0 - - -;
#X connect 0 0 17 0;
#X connect 0 0 21 0;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 10 0;
#X connect 7 0 14 0;
#X connect 8 0 13 0;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 15 0 5 0;
#X connect 16 0 3 0;
#X connect 17 0 18 0;
#X connect 17 1 16 0;
#X connect 17 1 1 0;
#X connect 17 1 15 0;
#X connect 17 1 2 0;
#X connect 18 0 10 0;
#X connect 18 0 9 0;
#X connect 18 0 8 0;
#X connect 18 0 7 0;
#X restore 66 251 pd \$0-synth2;
#N canvas 643 378 450 300 \$0-synth3 0;
#X obj 41 22 inlet;
#X obj 41 67 sel -1;
#X msg 20 104 0;
#X obj 79 104 + 72;
#X obj 79 140 mtof;
#X obj 79 186 osc~;
#X obj 78 243 throw~ \$0-audio-out;
#X floatatom 135 29 5 0 0 0 - #0-whammy -;
#X obj 135 58 sel 19 20 21 22 23 24 25 26;
#X msg 192 106 -12;
#X msg 235 106 0;
#X obj 206 143 +;
#X obj 206 173 mtof;
#X obj 206 243 throw~ \$0-audio-out;
#X obj 206 208 osc~;
#X text 218 22 lead tone patch;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 5 0;
#X connect 2 0 14 0;
#X connect 3 0 4 0;
#X connect 3 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 9 0;
#X connect 8 2 9 0;
#X connect 8 3 9 0;
#X connect 8 4 9 0;
#X connect 8 5 9 0;
#X connect 8 6 9 0;
#X connect 8 7 9 0;
#X connect 8 8 10 0;
#X connect 9 0 11 1;
#X connect 10 0 11 1;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 14 0 13 0;
#X restore 143 251 pd \$0-synth3;
#N canvas 792 410 394 303 \$0-synth4 0;
#X obj 33 14 inlet;
#N canvas 158 4 781 654 16x 0;
#X obj 69 345 *~ 0.064;
#X obj 69 368 rpole~ 0.93538;
#X obj 69 391 *~ 0.00431;
#X obj 69 414 cpole~ 0.96559 0.05592;
#X obj 69 440 cpole~ 0.96559 -0.05592;
#X obj 69 463 *~ 0.125;
#X obj 69 486 rzero~ -1;
#X obj 69 509 rzero~ -1;
#X obj 69 532 rzero~ -1;
#X obj 63 97 phasor~;
#X obj 69 566 outlet~;
#X obj 86 151 wrap~;
#X obj 86 127 -~;
#X obj 86 175 *~;
#X obj 63 204 +~;
#X obj 271 156 phasor~;
#X obj 294 210 wrap~;
#X obj 294 186 -~;
#X obj 294 234 *~;
#X obj 271 263 +~;
#X obj 64 271 +~;
#X obj 457 31 block~ 1024 1 16;
#X obj 62 29 inlet;
#X obj 250 34 r osc-params;
#X obj 250 57 unpack 0 0 0 0 0 0;
#X obj 272 100 *~;
#X obj 272 128 +~;
#X msg 341 338 \; osc-params 0.5 -0.5 0.5 0.5 1 0.5;
#X obj 341 312 loadbang;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 12 0;
#X connect 9 0 14 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 14 1;
#X connect 14 0 20 0;
#X connect 15 0 17 0;
#X connect 15 0 19 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 19 1;
#X connect 19 0 20 1;
#X connect 20 0 0 0;
#X connect 22 0 9 0;
#X connect 22 0 25 0;
#X connect 23 0 24 0;
#X connect 24 0 12 1;
#X connect 24 1 13 1;
#X connect 24 2 17 1;
#X connect 24 3 18 1;
#X connect 24 4 25 1;
#X connect 24 5 26 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 28 0 27 0;
#X restore 47 193 pd 16x;
#X obj 158 165 *~;
#X obj 157 135 +~ 0.2;
#X obj 157 189 *~ 2000;
#X obj 114 254 *~;
#X obj 49 251 *~;
#X obj 47 155 mtof;
#X obj 47 95 makenote 1;
#X obj 48 225 vcf~ 3;
#X floatatom 234 145 3 0 0 0 - - -;
#X floatatom 234 190 7 0 0 0 - - -;
#X obj 234 166 mtof;
#X obj 47 125 poly 1 1;
#N canvas 0 0 750 656 adsr 0;
#X obj 105 111 inlet;
#X obj 435 151 inlet;
#X text 101 86 trigger;
#X obj 105 139 sel 0;
#X obj 244 155 t b;
#X obj 166 264 f \$1;
#X obj 166 289 pack 0 \$2;
#X obj 492 151 inlet;
#X obj 438 281 del \$2;
#X obj 458 429 line~;
#X obj 462 304 f \$4;
#X obj 501 379 pack 0 \$3;
#X obj 554 151 inlet;
#X obj 616 151 inlet;
#X obj 689 150 inlet;
#X msg 105 170 stop;
#X obj 612 306 pack 0 \$5;
#X text 435 129 level;
#X obj 501 355 * \$1;
#X obj 458 454 outlet~;
#X text 102 378 and pack with;
#X text 103 398 attack time;
#X text 31 126 if zero;
#X text 32 143 release;
#X text 12 160 and cancel;
#X text 43 177 decay;
#X text 284 272 on attack \, set a;
#X text 278 305 recall sustain value;
#X text 315 378 pack with decay time;
#X text 605 332 on release ramp;
#X text 606 349 back to zero;
#X obj 462 329 * 0.01;
#X text 47 567 Objects such as "f" and "pack" can be given dollar sign
arguments to initialize their contents from adsr's creation arguments.
Inlets are supplied to change them on the fly.;
#X text 13 2 ADSR ENVELOPE;
#X text 488 129 attack;
#X text 555 128 decay;
#X text 609 129 sustain;
#X text 686 129 release;
#X text 202 71 attack;
#X obj 204 92 moses;
#X obj 194 122 t b b;
#X msg 128 290 0;
#X text 20 273 optionally;
#X text 10 291 bash to zero;
#X text 25 246 ATTACK:;
#X text 49 477 When you send this patch a positive trigger it schedules
a line~ to do an attack and decay \, and if zero \, it starts the release
ramp.;
#X text 495 629 Updated for Pd version 0.37;
#X text 255 89 test for negative trigger;
#X text 253 113 if so \, zero;
#X text 254 129 the output;
#X text 278 165 in any case;
#X text 303 355 multiply by peak level;
#X text 280 286 delay for sustain;
#X text 276 328 convert from percent;
#X text 155 340 ... then;
#X text 103 359 recall peak level;
#X text 439 113 peak;
#X text 281 149 ... do this;
#X text 47 529 Negative triggers cause the output to jump to zero and
then attack (instead of attacking from the current location).;
#X text 208 1 Arguments: level \, attack time \, decay time \, sustain
level \, release time. A \, D \, and R are in msec and S is in percent.
This patch is used as an abstraction in various examples.;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 39 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 39 0 40 0;
#X connect 39 1 4 0;
#X connect 40 0 4 0;
#X connect 40 1 41 0;
#X connect 41 0 9 0;
#X restore 157 106 pd adsr 1 10 200 50 500;
#N canvas 396 41 826 653 adsr 0;
#X obj 105 111 inlet;
#X obj 435 151 inlet;
#X text 101 86 trigger;
#X obj 105 139 sel 0;
#X obj 244 155 t b;
#X obj 166 264 f \$1;
#X obj 166 289 pack 0 \$2;
#X obj 492 151 inlet;
#X obj 438 281 del \$2;
#X obj 458 429 line~;
#X obj 462 304 f \$4;
#X obj 501 379 pack 0 \$3;
#X obj 554 151 inlet;
#X obj 616 151 inlet;
#X obj 689 150 inlet;
#X msg 105 170 stop;
#X obj 612 306 pack 0 \$5;
#X text 435 129 level;
#X obj 501 355 * \$1;
#X obj 458 454 outlet~;
#X text 102 378 and pack with;
#X text 103 398 attack time;
#X text 31 126 if zero;
#X text 32 143 release;
#X text 12 160 and cancel;
#X text 43 177 decay;
#X text 284 272 on attack \, set a;
#X text 278 305 recall sustain value;
#X text 315 378 pack with decay time;
#X text 605 332 on release ramp;
#X text 606 349 back to zero;
#X obj 462 329 * 0.01;
#X text 47 567 Objects such as "f" and "pack" can be given dollar sign
arguments to initialize their contents from adsr's creation arguments.
Inlets are supplied to change them on the fly.;
#X text 13 2 ADSR ENVELOPE;
#X text 488 129 attack;
#X text 555 128 decay;
#X text 609 129 sustain;
#X text 686 129 release;
#X text 202 71 attack;
#X obj 204 92 moses;
#X obj 194 122 t b b;
#X msg 128 290 0;
#X text 20 273 optionally;
#X text 10 291 bash to zero;
#X text 25 246 ATTACK:;
#X text 49 477 When you send this patch a positive trigger it schedules
a line~ to do an attack and decay \, and if zero \, it starts the release
ramp.;
#X text 495 629 Updated for Pd version 0.37;
#X text 255 89 test for negative trigger;
#X text 253 113 if so \, zero;
#X text 254 129 the output;
#X text 278 165 in any case;
#X text 303 355 multiply by peak level;
#X text 280 286 delay for sustain;
#X text 276 328 convert from percent;
#X text 155 340 ... then;
#X text 103 359 recall peak level;
#X text 439 113 peak;
#X text 281 149 ... do this;
#X text 47 529 Negative triggers cause the output to jump to zero and
then attack (instead of attacking from the current location).;
#X text 208 1 Arguments: level \, attack time \, decay time \, sustain
level \, release time. A \, D \, and R are in msec and S is in percent.
This patch is used as an abstraction in various examples.;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 1 0 18 1;
#X connect 3 0 15 0;
#X connect 3 0 16 0;
#X connect 3 1 39 0;
#X connect 4 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 19 0;
#X connect 10 0 31 0;
#X connect 11 0 9 0;
#X connect 12 0 11 1;
#X connect 13 0 10 1;
#X connect 14 0 16 1;
#X connect 15 0 8 0;
#X connect 16 0 9 0;
#X connect 18 0 11 0;
#X connect 31 0 18 0;
#X connect 39 0 40 0;
#X connect 39 1 4 0;
#X connect 40 0 4 0;
#X connect 40 1 41 0;
#X connect 41 0 9 0;
#X restore 114 229 pd adsr 2 30 200 50 500;
#X msg 106 35 300;
#X obj 50 279 throw~ \$0-audio-out;
#X obj 14 48 sel -1;
#X floatatom 66 38 5 0 0 0 - - -;
#X obj 47 71 + 60;
#X connect 0 0 18 0;
#X connect 0 0 19 0;
#X connect 1 0 9 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 2 1;
#X connect 4 0 9 1;
#X connect 5 0 6 1;
#X connect 6 0 17 0;
#X connect 7 0 1 0;
#X connect 8 0 13 0;
#X connect 8 1 13 1;
#X connect 8 1 14 0;
#X connect 9 0 6 0;
#X connect 10 0 12 0;
#X connect 11 0 4 1;
#X connect 12 0 11 0;
#X connect 13 1 7 0;
#X connect 13 2 15 0;
#X connect 14 0 3 0;
#X connect 15 0 5 0;
#X connect 15 0 5 1;
#X connect 16 0 8 2;
#X connect 18 1 20 0;
#X connect 20 0 8 0;
#X restore 220 251 pd \$0-synth4;
#X obj 548 17 route 1 2 4 8;
#X obj 198 17 route 17 18 20 24;
#X floatatom -11 228 5 0 0 0 - - -;
#X floatatom 66 227 5 0 0 0 - - -;
#X floatatom 143 228 5 0 0 0 - - -;
#X floatatom 220 228 5 0 0 0 - - -;
#X floatatom 348 228 5 0 0 0 - - -;
#X floatatom 425 228 5 0 0 0 - - -;
#X floatatom 502 228 5 0 0 0 - - -;
#X floatatom 579 228 5 0 0 0 - - -;
#N canvas 406 25 406 359 \$0-synth5 0;
#X obj 55 15 inlet;
#X obj 159 145 mtof;
#X floatatom 159 172 5 0 0 0 - - -;
#X obj 159 117 + 60;
#X obj 159 277 osc~;
#X obj 160 324 throw~ \$0-audio-out;
#X obj 77 117 + 65;
#X obj 77 143 mtof;
#X floatatom 77 173 5 0 0 0 - - -;
#X obj 77 277 osc~;
#X obj 34 323 throw~ \$0-audio-out;
#X obj 245 148 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-whammy empty 0 -8
0 10 -262144 -1 -1 17 256;
#X obj 159 221 +;
#X obj 204 201 * 10;
#X obj 245 179 - 15;
#X obj 55 66 sel -1;
#X floatatom 33 249 5 0 0 0 - - -;
#X text 217 129 reads value from whammy bar;
#X text 101 63 value of -1 disables output;
#X floatatom 105 43 5 0 0 0 - - -;
#X connect 0 0 15 0;
#X connect 0 0 19 0;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 14 0;
#X connect 12 0 4 0;
#X connect 13 0 12 1;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 15 1 3 0;
#X connect 15 1 6 0;
#X connect 16 0 9 0;
#X connect 16 0 4 0;
#X restore 348 251 pd \$0-synth5;
#N canvas 0 0 357 330 \$0-synth6 0;
#X obj 49 21 inlet;
#X obj 133 123 + 60;
#X obj 218 123 + 65;
#X obj 90 156 mtof;
#X obj 133 156 mtof;
#X obj 176 156 mtof;
#X obj 218 156 mtof;
#X obj 90 209 osc~;
#X obj 133 208 osc~;
#X obj 176 208 osc~;
#X obj 218 207 osc~;
#X obj 217 240 throw~ \$0-audio-out;
#X obj 177 261 throw~ \$0-audio-out;
#X obj 134 282 throw~ \$0-audio-out;
#X obj 89 303 throw~ \$0-audio-out;
#X obj 176 123 + 67;
#X obj 90 123 + 72;
#X obj 106 67 sel -1;
#X floatatom 36 173 5 0 0 0 - - -;
#X text 151 68 value of -1 disables output;
#X text 103 23 minor chord patch;
#X connect 0 0 17 0;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 10 0;
#X connect 7 0 14 0;
#X connect 8 0 13 0;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 15 0 5 0;
#X connect 16 0 3 0;
#X connect 17 0 18 0;
#X connect 17 1 16 0;
#X connect 17 1 1 0;
#X connect 17 1 15 0;
#X connect 17 1 2 0;
#X connect 18 0 10 0;
#X connect 18 0 9 0;
#X connect 18 0 8 0;
#X connect 18 0 7 0;
#X restore 425 251 pd \$0-synth6;
#N canvas 0 0 450 300 \$0-synth7 0;
#X obj 51 22 inlet;
#X obj 51 77 sel -1;
#X msg 30 114 0;
#X obj 89 114 + 72;
#X obj 89 150 mtof;
#X obj 89 196 osc~;
#X obj 88 253 throw~ \$0-audio-out;
#X floatatom 145 39 5 0 0 0 - #0-whammy -;
#X obj 145 68 sel 19 20 21 22 23 24 25 26;
#X msg 202 116 -12;
#X msg 245 116 0;
#X obj 216 153 +;
#X obj 216 183 mtof;
#X obj 216 253 throw~ \$0-audio-out;
#X obj 216 218 osc~;
#X text 228 32 lead tone patch;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 5 0;
#X connect 2 0 14 0;
#X connect 3 0 4 0;
#X connect 3 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 9 0;
#X connect 8 2 9 0;
#X connect 8 3 9 0;
#X connect 8 4 9 0;
#X connect 8 5 9 0;
#X connect 8 6 9 0;
#X connect 8 7 9 0;
#X connect 8 8 10 0;
#X connect 9 0 11 1;
#X connect 10 0 11 1;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 14 0 13 0;
#X restore 502 251 pd \$0-synth7;
#N canvas 0 0 450 300 \$0-synth8 0;
#X obj 33 24 inlet;
#X restore 579 251 pd \$0-synth8;
#X connect 0 0 1 0;
#X connect 0 0 33 0;
#X connect 0 0 34 0;
#X connect 0 0 35 0;
#X connect 0 0 36 0;
#X connect 3 0 45 0;
#X connect 4 0 8 0;
#X connect 4 0 9 0;
#X connect 5 0 10 0;
#X connect 5 0 11 0;
#X connect 6 0 12 0;
#X connect 6 0 13 0;
#X connect 7 0 14 0;
#X connect 7 0 15 0;
#X connect 8 0 33 1;
#X connect 9 0 34 1;
#X connect 9 0 35 1;
#X connect 9 0 36 1;
#X connect 10 0 34 1;
#X connect 11 0 33 1;
#X connect 11 0 35 1;
#X connect 11 0 36 1;
#X connect 12 0 35 1;
#X connect 13 0 33 1;
#X connect 13 0 34 1;
#X connect 13 0 36 1;
#X connect 14 0 36 1;
#X connect 15 0 33 1;
#X connect 15 0 34 1;
#X connect 15 0 35 1;
#X connect 16 0 17 0;
#X connect 16 0 37 0;
#X connect 16 0 38 0;
#X connect 16 0 39 0;
#X connect 16 0 40 0;
#X connect 18 0 41 0;
#X connect 18 0 46 0;
#X connect 19 0 23 0;
#X connect 19 0 24 0;
#X connect 20 0 25 0;
#X connect 20 0 26 0;
#X connect 21 0 27 0;
#X connect 21 0 28 0;
#X connect 22 0 29 0;
#X connect 22 0 30 0;
#X connect 23 0 37 1;
#X connect 24 0 38 1;
#X connect 24 0 39 1;
#X connect 24 0 40 1;
#X connect 25 0 38 1;
#X connect 26 0 37 1;
#X connect 26 0 39 1;
#X connect 26 0 40 1;
#X connect 27 0 39 1;
#X connect 28 0 37 1;
#X connect 28 0 38 1;
#X connect 28 0 40 1;
#X connect 29 0 40 1;
#X connect 30 0 37 1;
#X connect 30 0 38 1;
#X connect 30 0 39 1;
#X connect 33 0 51 0;
#X connect 34 0 52 0;
#X connect 35 0 53 0;
#X connect 36 0 54 0;
#X connect 37 0 47 0;
#X connect 38 0 48 0;
#X connect 39 0 49 0;
#X connect 40 0 50 0;
#X connect 45 0 4 0;
#X connect 45 1 5 0;
#X connect 45 2 6 0;
#X connect 45 3 7 0;
#X connect 46 0 19 0;
#X connect 46 1 20 0;
#X connect 46 2 21 0;
#X connect 46 3 22 0;
#X connect 47 0 31 0;
#X connect 48 0 42 0;
#X connect 49 0 43 0;
#X connect 50 0 44 0;
#X connect 51 0 55 0;
#X connect 52 0 56 0;
#X connect 53 0 57 0;
#X connect 54 0 58 0;
#X restore 383 96 pd \$0-synth;
#X connect 0 0 15 0;
#X connect 0 0 42 0;
#X connect 0 0 45 0;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 4 0 14 0;
#X connect 5 0 14 0;
#X connect 6 0 14 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 9 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 61 0;
#X connect 15 0 1 0;
#X connect 15 1 2 0;
#X connect 15 2 3 0;
#X connect 15 3 4 0;
#X connect 15 4 5 0;
#X connect 15 5 6 0;
#X connect 15 6 7 0;
#X connect 15 7 8 0;
#X connect 15 8 9 0;
#X connect 15 9 10 0;
#X connect 15 10 11 0;
#X connect 15 11 12 0;
#X connect 15 12 13 0;
#X connect 15 13 48 0;
#X connect 29 0 47 0;
#X connect 30 0 47 0;
#X connect 31 0 47 0;
#X connect 32 0 47 0;
#X connect 33 0 47 0;
#X connect 34 0 47 0;
#X connect 35 0 47 0;
#X connect 36 0 47 0;
#X connect 37 0 47 0;
#X connect 38 0 47 0;
#X connect 39 0 47 0;
#X connect 40 0 47 0;
#X connect 41 0 47 0;
#X connect 43 0 47 0;
#X connect 44 0 47 0;
#X connect 45 0 44 0;
#X connect 45 1 43 0;
#X connect 45 2 29 0;
#X connect 45 3 30 0;
#X connect 45 4 31 0;
#X connect 45 5 32 0;
#X connect 45 6 33 0;
#X connect 45 7 34 0;
#X connect 45 8 35 0;
#X connect 45 9 36 0;
#X connect 45 10 37 0;
#X connect 45 11 38 0;
#X connect 45 12 39 0;
#X connect 45 13 40 0;
#X connect 45 14 41 0;
#X connect 45 15 46 0;
#X connect 46 0 47 0;
#X connect 47 0 61 1;
#X connect 48 0 14 0;
#X restore 82 156 pd \$0-process-guitar;
#N canvas 0 0 450 300 \$0-guitar-accel 0;
#X obj 136 76 inlet;
#X obj 136 109 unpack 0 0 0;
#X obj 215 129 s \$0-nc-accZ-set;
#X obj 136 167 s \$0-nc-accX-set;
#X obj 175 148 s \$0-whammy;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 4 0;
#X connect 1 2 2 0;
#X restore 105 136 pd \$0-guitar-accel;
#X text 208 156 <-- this is where most stuff happens;
#X text 250 -123 wii guitar controller synth;
#X text 12 228 How to play: Notes are chosen using the green \, red
\, yellow and blue buttons. Notes are played with the strum button.
Strum up and Strum down each have four synth options. Synths are set
using the directional pad for the up stroke and using the directional
pad while holding down + for the down stroke.;
#X text 281 20 http://wiki.github.com/goldfish/wii-guitar-controller-synth
;
#X text 611 128 volume;
#X text 389 253 up (towards the neck) doesn't work yet.;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 5 0 3 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 9 0 2 0;
#X connect 13 0 16 0;
#X connect 13 0 16 1;
#X connect 14 0 13 1;
#X connect 15 0 14 0;
#X connect 17 0 13 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 21 1 22 0;
#X connect 21 3 23 0;
#X connect 21 4 24 0;
